//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace FS.Core.SoapNotify {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_INotificationManager", Namespace="http://tempuri.org/")]
    public partial class NotificationManager : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AddNotificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllNotificationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClearLastNotificationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStatsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public NotificationManager() {
            this.Url = global::FS.Core.Properties.Settings.Default.FS_Core_SoapNotify_NotificationManager;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AddNotificationCompletedEventHandler AddNotificationCompleted;
        
        /// <remarks/>
        public event GetAllNotificationsCompletedEventHandler GetAllNotificationsCompleted;
        
        /// <remarks/>
        public event ClearLastNotificationsCompletedEventHandler ClearLastNotificationsCompleted;
        
        /// <remarks/>
        public event GetStatsCompletedEventHandler GetStatsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INotificationManager/AddNotification", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ResultDTO AddNotification([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] NotificationDTO notification, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string hash) {
            object[] results = this.Invoke("AddNotification", new object[] {
                        notification,
                        hash});
            return ((ResultDTO)(results[0]));
        }
        
        /// <remarks/>
        public void AddNotificationAsync(NotificationDTO notification, string hash) {
            this.AddNotificationAsync(notification, hash, null);
        }
        
        /// <remarks/>
        public void AddNotificationAsync(NotificationDTO notification, string hash, object userState) {
            if ((this.AddNotificationOperationCompleted == null)) {
                this.AddNotificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNotificationOperationCompleted);
            }
            this.InvokeAsync("AddNotification", new object[] {
                        notification,
                        hash}, this.AddNotificationOperationCompleted, userState);
        }
        
        private void OnAddNotificationOperationCompleted(object arg) {
            if ((this.AddNotificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNotificationCompleted(this, new AddNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INotificationManager/GetAllNotifications", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public NotificationListsDTO GetAllNotifications() {
            object[] results = this.Invoke("GetAllNotifications", new object[0]);
            return ((NotificationListsDTO)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllNotificationsAsync() {
            this.GetAllNotificationsAsync(null);
        }
        
        /// <remarks/>
        public void GetAllNotificationsAsync(object userState) {
            if ((this.GetAllNotificationsOperationCompleted == null)) {
                this.GetAllNotificationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllNotificationsOperationCompleted);
            }
            this.InvokeAsync("GetAllNotifications", new object[0], this.GetAllNotificationsOperationCompleted, userState);
        }
        
        private void OnGetAllNotificationsOperationCompleted(object arg) {
            if ((this.GetAllNotificationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllNotificationsCompleted(this, new GetAllNotificationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INotificationManager/ClearLastNotifications", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ResultDTO ClearLastNotifications(bool clearErrors, [System.Xml.Serialization.XmlIgnoreAttribute()] bool clearErrorsSpecified, bool clearMsgs, [System.Xml.Serialization.XmlIgnoreAttribute()] bool clearMsgsSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string hash) {
            object[] results = this.Invoke("ClearLastNotifications", new object[] {
                        clearErrors,
                        clearErrorsSpecified,
                        clearMsgs,
                        clearMsgsSpecified,
                        hash});
            return ((ResultDTO)(results[0]));
        }
        
        /// <remarks/>
        public void ClearLastNotificationsAsync(bool clearErrors, bool clearErrorsSpecified, bool clearMsgs, bool clearMsgsSpecified, string hash) {
            this.ClearLastNotificationsAsync(clearErrors, clearErrorsSpecified, clearMsgs, clearMsgsSpecified, hash, null);
        }
        
        /// <remarks/>
        public void ClearLastNotificationsAsync(bool clearErrors, bool clearErrorsSpecified, bool clearMsgs, bool clearMsgsSpecified, string hash, object userState) {
            if ((this.ClearLastNotificationsOperationCompleted == null)) {
                this.ClearLastNotificationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClearLastNotificationsOperationCompleted);
            }
            this.InvokeAsync("ClearLastNotifications", new object[] {
                        clearErrors,
                        clearErrorsSpecified,
                        clearMsgs,
                        clearMsgsSpecified,
                        hash}, this.ClearLastNotificationsOperationCompleted, userState);
        }
        
        private void OnClearLastNotificationsOperationCompleted(object arg) {
            if ((this.ClearLastNotificationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClearLastNotificationsCompleted(this, new ClearLastNotificationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INotificationManager/GetStats", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public StatListDTO GetStats(int interval, [System.Xml.Serialization.XmlIgnoreAttribute()] bool intervalSpecified, int count, [System.Xml.Serialization.XmlIgnoreAttribute()] bool countSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string hash) {
            object[] results = this.Invoke("GetStats", new object[] {
                        interval,
                        intervalSpecified,
                        count,
                        countSpecified,
                        hash});
            return ((StatListDTO)(results[0]));
        }
        
        /// <remarks/>
        public void GetStatsAsync(int interval, bool intervalSpecified, int count, bool countSpecified, string hash) {
            this.GetStatsAsync(interval, intervalSpecified, count, countSpecified, hash, null);
        }
        
        /// <remarks/>
        public void GetStatsAsync(int interval, bool intervalSpecified, int count, bool countSpecified, string hash, object userState) {
            if ((this.GetStatsOperationCompleted == null)) {
                this.GetStatsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStatsOperationCompleted);
            }
            this.InvokeAsync("GetStats", new object[] {
                        interval,
                        intervalSpecified,
                        count,
                        countSpecified,
                        hash}, this.GetStatsOperationCompleted, userState);
        }
        
        private void OnGetStatsOperationCompleted(object arg) {
            if ((this.GetStatsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStatsCompleted(this, new GetStatsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MsgLogDTO))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ErrorDTO))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MonitoringManager_PROD.Definitions.Notifi" +
        "cations")]
    public partial class NotificationDTO {
        
        private System.Nullable<System.DateTime> addDateField;
        
        private bool addDateFieldSpecified;
        
        private string descriptionField;
        
        private DictionaryItemDTO endpointField;
        
        private bool ghostField;
        
        private bool ghostFieldSpecified;
        
        private int idField;
        
        private bool idFieldSpecified;
        
        private string infoPKField;
        
        private KeyValuePairOfstringstring[] keyValueField;
        
        private System.DateTime occuranceDateField;
        
        private bool occuranceDateFieldSpecified;
        
        private string sourceIPField;
        
        private DictionaryItemDTO systemField;
        
        private string userField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> AddDate {
            get {
                return this.addDateField;
            }
            set {
                this.addDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AddDateSpecified {
            get {
                return this.addDateFieldSpecified;
            }
            set {
                this.addDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public DictionaryItemDTO Endpoint {
            get {
                return this.endpointField;
            }
            set {
                this.endpointField = value;
            }
        }
        
        /// <remarks/>
        public bool Ghost {
            get {
                return this.ghostField;
            }
            set {
                this.ghostField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GhostSpecified {
            get {
                return this.ghostFieldSpecified;
            }
            set {
                this.ghostFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IDSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string InfoPK {
            get {
                return this.infoPKField;
            }
            set {
                this.infoPKField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/System.Collections.Generic", IsNullable=false)]
        public KeyValuePairOfstringstring[] KeyValue {
            get {
                return this.keyValueField;
            }
            set {
                this.keyValueField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime OccuranceDate {
            get {
                return this.occuranceDateField;
            }
            set {
                this.occuranceDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OccuranceDateSpecified {
            get {
                return this.occuranceDateFieldSpecified;
            }
            set {
                this.occuranceDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SourceIP {
            get {
                return this.sourceIPField;
            }
            set {
                this.sourceIPField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public DictionaryItemDTO System {
            get {
                return this.systemField;
            }
            set {
                this.systemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string User {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MonitoringManager_PROD.Definitions.Dictio" +
        "naries")]
    public partial class DictionaryItemDTO {
        
        private string codeField;
        
        private bool ghostField;
        
        private bool ghostFieldSpecified;
        
        private int idField;
        
        private bool idFieldSpecified;
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public bool Ghost {
            get {
                return this.ghostField;
            }
            set {
                this.ghostField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GhostSpecified {
            get {
                return this.ghostFieldSpecified;
            }
            set {
                this.ghostFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IDSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MonitoringManager_PROD.Definitions.Stats")]
    public partial class StatDTO {
        
        private int countField;
        
        private bool countFieldSpecified;
        
        private System.DateTime dateFromField;
        
        private bool dateFromFieldSpecified;
        
        private System.DateTime dateToField;
        
        private bool dateToFieldSpecified;
        
        private int idField;
        
        private bool idFieldSpecified;
        
        /// <remarks/>
        public int Count {
            get {
                return this.countField;
            }
            set {
                this.countField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CountSpecified {
            get {
                return this.countFieldSpecified;
            }
            set {
                this.countFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateFrom {
            get {
                return this.dateFromField;
            }
            set {
                this.dateFromField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DateFromSpecified {
            get {
                return this.dateFromFieldSpecified;
            }
            set {
                this.dateFromFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateTo {
            get {
                return this.dateToField;
            }
            set {
                this.dateToField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DateToSpecified {
            get {
                return this.dateToFieldSpecified;
            }
            set {
                this.dateToFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IdSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MonitoringManager_PROD.Definitions.Stats")]
    public partial class StatListDTO {
        
        private StatDTO[] statsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public StatDTO[] Stats {
            get {
                return this.statsField;
            }
            set {
                this.statsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MonitoringManager_PROD.Definitions.Notifi" +
        "cations")]
    public partial class NotificationListsDTO {
        
        private ErrorDTO[] errorsField;
        
        private MsgLogDTO[] msgsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public ErrorDTO[] Errors {
            get {
                return this.errorsField;
            }
            set {
                this.errorsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public MsgLogDTO[] Msgs {
            get {
                return this.msgsField;
            }
            set {
                this.msgsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MonitoringManager_PROD.Definitions.Notifi" +
        "cations")]
    public partial class ErrorDTO : NotificationDTO {
        
        private string errorMessageField;
        
        private string stackTraceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string StackTrace {
            get {
                return this.stackTraceField;
            }
            set {
                this.stackTraceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MonitoringManager_PROD.Definitions.Notifi" +
        "cations")]
    public partial class MsgLogDTO : NotificationDTO {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MonitoringManager_PROD.Definitions")]
    public partial class ResultDTO {
        
        private string errorDescField;
        
        private ErrorCode errorTypeField;
        
        private bool errorTypeFieldSpecified;
        
        private bool isOKField;
        
        private bool isOKFieldSpecified;
        
        private string messageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ErrorDesc {
            get {
                return this.errorDescField;
            }
            set {
                this.errorDescField = value;
            }
        }
        
        /// <remarks/>
        public ErrorCode ErrorType {
            get {
                return this.errorTypeField;
            }
            set {
                this.errorTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ErrorTypeSpecified {
            get {
                return this.errorTypeFieldSpecified;
            }
            set {
                this.errorTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsOK {
            get {
                return this.isOKField;
            }
            set {
                this.isOKField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsOKSpecified {
            get {
                return this.isOKFieldSpecified;
            }
            set {
                this.isOKFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/MonitoringManager_PROD.Definitions.Enums")]
    public enum ErrorCode {
        
        /// <remarks/>
        BrakBledu,
        
        /// <remarks/>
        A01_BladAutentykacji,
        
        /// <remarks/>
        A02_BladAutoryzacji,
        
        /// <remarks/>
        A03_Exception,
        
        /// <remarks/>
        A04_BledneParametryWejsciowe,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/System.Collections.Generic")]
    public partial class KeyValuePairOfstringstring {
        
        private string keyField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AddNotificationCompletedEventHandler(object sender, AddNotificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddNotificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddNotificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResultDTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResultDTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetAllNotificationsCompletedEventHandler(object sender, GetAllNotificationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllNotificationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllNotificationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NotificationListsDTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NotificationListsDTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ClearLastNotificationsCompletedEventHandler(object sender, ClearLastNotificationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ClearLastNotificationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ClearLastNotificationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResultDTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResultDTO)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetStatsCompletedEventHandler(object sender, GetStatsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStatsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStatsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StatListDTO Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StatListDTO)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591